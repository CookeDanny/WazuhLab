Vagrant.configure("2") do |config|

  config.vm.define "logger" do |cfg|
    cfg.vm.box = "bento/ubuntu-16.04"
    cfg.vm.hostname = "wazuh"
    config.vm.provision :shell, :privileged => true, :path => "bootstrap.sh"
    #config.vm.provision :shell, :privileged => false, :path => "filename"
    cfg.vm.network :private_network, ip: "192.168.38.5", gateway: "192.168.38.1", dns: "8.8.8.8"

    cfg.vm.provider "vmware_fusion" do |v, override|
      v.vmx["displayname"] = "wazuh"
      v.memory = 2048
      v.cpus = 1
      v.gui = true
    end

    cfg.vm.provider "vmware_desktop" do |v, override|
      v.vmx["displayname"] = "wazuh"
      v.memory = 4096
      v.cpus = 2
      v.gui = true
    end

    cfg.vm.provider "virtualbox" do |vb, override|
      vb.gui = true
      vb.name = "wazuh"
      vb.customize ["modifyvm", :id, "--memory", 4096]
      vb.customize ["modifyvm", :id, "--cpus", 2]
      vb.customize ["modifyvm", :id, "--vram", "32"]
      vb.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
      vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
      vb.customize ["setextradata", "global", "GUI/SuppressMessages", "all" ]
    end
  end
  
  #Install Domain Controller - needs boxes in Boxes folder
  
  config.vm.define "dc" do |cfg| 
  config.vm.box = "../Boxes/windows_2016_virtualbox.box"
  cfg.vm.hostname = "dc"
  cfg.vm.boot_timeout = 600
  cfg.winrm.transport = :plaintext
  cfg.vm.communicator = "winrm"
  cfg.winrm.basic_auth_only = true
  cfg.winrm.timeout = 300
  cfg.winrm.retry_limit = 20
  
  #Set IP address details
  
  cfg.vm.network :private_network, ip: "192.168.38.2", gateway: "192.168.38.1"
  
  #Run Provisioning scripts
  
  cfg.vm.provision "shell", path: "scripts/provision.ps1", privileged: false
  cfg.vm.provision "reload"
  cfg.vm.provision "shell", path: "scripts/provision.ps1", privileged: false
  cfg.vm.provision "shell", path: "scripts/install-utilities.ps1", privileged: true
  cfg.vm.provision "shell", path: "scripts/configure-ou.ps1", privileged: true
  cfg.vm.provision "shell", path: "scripts/configure-AuditingPolicyGPOs.ps1", privileged: true
 
  cfg.vm.provider "virtualbox" do |vb, override|
      vb.gui = true
      vb.customize ["modifyvm", :id, "--memory", 2048]
      vb.customize ["modifyvm", :id, "--cpus", 2]
      vb.customize ["modifyvm", :id, "--vram", "32"]
      vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
      vb.customize ["setextradata", "global", "GUI/SuppressMessages", "all" ]
    end
  end

#Provision Windows 10 Domain Client
 
 config.vm.define "win10" do |cfg|
    cfg.vm.box = "../Boxes/windows_10_virtualbox.box"
    cfg.vm.hostname = "win10"
    cfg.vm.communicator = "winrm"
    cfg.winrm.basic_auth_only = true
    cfg.winrm.timeout = 300
    cfg.winrm.retry_limit = 20
    cfg.vm.network :private_network, ip: "192.168.38.5", gateway: "192.168.38.1", dns: "192.168.38.2"
  
    #Run Provisioning scripts

    cfg.vm.provision "shell", path: "scripts/provision.ps1", privileged: false
    cfg.vm.provision "reload"
    cfg.vm.provision "shell", path: "scripts/provision.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/MakeWindows10GreatAgain.ps1", privileged: true
    cfg.vm.provision "shell", path: "scripts/install-utilities.ps1", privileged: true
 
    cfg.vm.provider "virtualbox" do |vb, override|
      vb.gui = true
      vb.customize ["modifyvm", :id, "--memory", 2048]
      vb.customize ["modifyvm", :id, "--cpus", 2]
      vb.customize ["modifyvm", :id, "--vram", "32"]
      vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
      vb.customize ["setextradata", "global", "GUI/SuppressMessages", "all" ]
    end
end
  
end

